name: Publish to NPM

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run type check
        run: npm run type-check
        
      - name: Run tests
        run: npm test
        
      - name: Build package
        run: npm run build
        
      - name: Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view paystation version 2>/dev/null || echo "0.0.0")
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "published=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Extract changelog for current version
        if: steps.version-check.outputs.changed == 'true'
        id: changelog
        run: |
          VERSION="${{ steps.version-check.outputs.current }}"
          # Extract changelog content for current version
          CHANGELOG_CONTENT=$(awk "/## \[$VERSION\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md || echo "No changelog entry found for version $VERSION")
          # Save to file to handle multiline content
          echo "$CHANGELOG_CONTENT" > /tmp/changelog.txt
          echo "content<<EOF" >> $GITHUB_OUTPUT
          cat /tmp/changelog.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Publish to NPM
        if: steps.version-check.outputs.changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        if: steps.version-check.outputs.changed == 'true'
        run: |
          cat > /tmp/release_notes.md << 'EOF'
          ## PayStation TypeScript SDK v${{ steps.version-check.outputs.current }}

          ### Installation
          ```bash
          npm install paystation@${{ steps.version-check.outputs.current }}
          ```

          ### Changes
          ${{ steps.changelog.outputs.content }}

          ### Links
          - [NPM Package](https://www.npmjs.com/package/paystation)
          - [Documentation](https://github.com/ain477/paystation#readme)
          - [Changelog](https://github.com/ain477/paystation/blob/main/CHANGELOG.md)
          EOF
          
          gh release create "v${{ steps.version-check.outputs.current }}" \
            --title "Release v${{ steps.version-check.outputs.current }}" \
            --notes-file /tmp/release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}